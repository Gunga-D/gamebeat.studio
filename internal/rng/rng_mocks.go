// Code generated by MockGen. DO NOT EDIT.
// Source: internal/rng/rng.go

// Package rng is a generated GoMock package.
package rng

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRNG is a mock of RNG interface.
type MockRNG struct {
	ctrl     *gomock.Controller
	recorder *MockRNGMockRecorder
}

// MockRNGMockRecorder is the mock recorder for MockRNG.
type MockRNGMockRecorder struct {
	mock *MockRNG
}

// NewMockRNG creates a new mock instance.
func NewMockRNG(ctrl *gomock.Controller) *MockRNG {
	mock := &MockRNG{ctrl: ctrl}
	mock.recorder = &MockRNGMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRNG) EXPECT() *MockRNGMockRecorder {
	return m.recorder
}

// Random mocks base method.
func (m *MockRNG) Random(min, max uint32) uint32 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Random", min, max)
	ret0, _ := ret[0].(uint32)
	return ret0
}

// Random indicates an expected call of Random.
func (mr *MockRNGMockRecorder) Random(min, max interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Random", reflect.TypeOf((*MockRNG)(nil).Random), min, max)
}
